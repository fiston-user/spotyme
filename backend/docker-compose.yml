services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spotyme-backend
    restart: always
    ports:
      - "3000:3000"
    environment:
      # Server Configuration
      PORT: 3000
      NODE_ENV: ${NODE_ENV:-production}
      
      # MongoDB Configuration
      MONGODB_URI: mongodb://${MONGO_USER:-spotyme_user}:${MONGO_PASSWORD:-spotyme_pass}@mongodb:27017/${MONGO_DATABASE:-spotyme}?authSource=spotyme
      
      # Spotify API Credentials
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
      SPOTIFY_REDIRECT_URI: ${SPOTIFY_REDIRECT_URI}
      
      # Session Configuration
      SESSION_SECRET: ${SESSION_SECRET}
      SESSION_STORE_SECRET: ${SESSION_STORE_SECRET:-${SESSION_SECRET}}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRY: ${JWT_EXPIRY:-7d}
      
      # Frontend URL (for CORS)
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:8081}
      
      # OpenAI Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      
      # Encryption Configuration
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      
      # Redis Configuration
      # For local development, Redis without password (optional: add password for security)
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - spotyme-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:7.0
    container_name: spotyme-mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-spotyme}
      # Pass user credentials to init script
      MONGO_USER: ${MONGO_USER:-spotyme_user}
      MONGO_PASSWORD: ${MONGO_PASSWORD:-spotyme_pass}
    volumes:
      - mongo-data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - spotyme-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  redis:
    image: redis:7-alpine
    container_name: spotyme-redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --appendfsync everysec
    volumes:
      - redis-data:/data
    networks:
      - spotyme-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mongo-data:
    driver: local
  redis-data:
    driver: local

networks:
  spotyme-network:
    driver: bridge
